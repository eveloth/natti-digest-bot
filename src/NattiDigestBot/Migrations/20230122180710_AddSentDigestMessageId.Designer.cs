// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NattiDigestBot.Data;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace NattiDigestBot.Migrations
{
    [DbContext(typeof(DigestContext))]
    [Migration("20230122180710_AddSentDigestMessageId")]
    partial class AddSentDigestMessageId
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("NattiDigestBot.Domain.Account", b =>
                {
                    b.Property<long>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("AccountId"));

                    b.Property<long?>("GroupId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsGroupConfirmed")
                        .HasColumnType("boolean");

                    b.Property<int?>("PinnedDigestMessageId")
                        .HasColumnType("integer");

                    b.HasKey("AccountId");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("NattiDigestBot.Domain.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CategoryId"));

                    b.Property<long>("AccountId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Keyword")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("CategoryId");

                    b.HasIndex("AccountId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("NattiDigestBot.Domain.Digest", b =>
                {
                    b.Property<long>("AccountId")
                        .HasColumnType("bigint");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<string>("DigestText")
                        .HasColumnType("text");

                    b.Property<bool>("IsSent")
                        .HasColumnType("boolean");

                    b.HasKey("AccountId", "Date");

                    b.ToTable("Digests");
                });

            modelBuilder.Entity("NattiDigestBot.Domain.DigestEntry", b =>
                {
                    b.Property<int>("DigestEntryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("DigestEntryId"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("DigestId")
                        .HasColumnType("bigint");

                    b.Property<string>("MessageLink")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("DigestEntryId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("DigestId", "Date");

                    b.ToTable("DigestEntries");
                });

            modelBuilder.Entity("NattiDigestBot.Domain.Category", b =>
                {
                    b.HasOne("NattiDigestBot.Domain.Account", null)
                        .WithMany("Categories")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NattiDigestBot.Domain.Digest", b =>
                {
                    b.HasOne("NattiDigestBot.Domain.Account", null)
                        .WithMany("Digests")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NattiDigestBot.Domain.DigestEntry", b =>
                {
                    b.HasOne("NattiDigestBot.Domain.Category", "Category")
                        .WithMany("DigestEntries")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NattiDigestBot.Domain.Digest", "Digest")
                        .WithMany("DigestEntries")
                        .HasForeignKey("DigestId", "Date")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Digest");
                });

            modelBuilder.Entity("NattiDigestBot.Domain.Account", b =>
                {
                    b.Navigation("Categories");

                    b.Navigation("Digests");
                });

            modelBuilder.Entity("NattiDigestBot.Domain.Category", b =>
                {
                    b.Navigation("DigestEntries");
                });

            modelBuilder.Entity("NattiDigestBot.Domain.Digest", b =>
                {
                    b.Navigation("DigestEntries");
                });
#pragma warning restore 612, 618
        }
    }
}
